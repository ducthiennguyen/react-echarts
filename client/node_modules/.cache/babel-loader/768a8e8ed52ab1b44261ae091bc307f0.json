{"ast":null,"code":"var _jsxFileName = \"/Users/Phuongloan/Downloads/react-echarts-master/client/src/chart1.js\";\nimport React, { Component } from 'react';\nimport ReactEcharts from 'echarts-for-react';\nvar func = 'FX_DAILY';\nvar from_symbol = 'USD';\nvar to_symbol = 'JPY';\nvar apikey = '4ZHSS420ZVOBWM4I'; // var URL = `https://www.alphavantage.co/query?function=${func}&from_symbol=${from_symbol}&to_symbol=${to_symbol}&interval=1min&apikey=${apikey}`;\n\nvar URL = 'http://localhost:12321/chart1'; // var ticker_array = [];\n// var date_array = [];\n// var close_values = [];\n\nclass Chart1 extends Component {\n  constructor() {\n    super();\n    this.state = {\n      dates: [],\n      close_prices: []\n    };\n  }\n\n  componentDidMount() {\n    fetch(URL).then(results => {\n      return results.json();\n    }).then(data => {\n      console.log('Data: ', data);\n\n      for (let item in data) {\n        console.log(item);\n      }\n\n      this.setState({\n        dates: data['USDJPY']['dates'],\n        close_prices: [data['USDJPY']['close_prices'], data['EURJPY']['close_prices']]\n      });\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, React.createElement(ReactEcharts, {\n      option: {\n        tooltip: {\n          trigger: 'item'\n        },\n        xAxis: {\n          type: 'category',\n          data: this.state.dates\n        },\n        yAxis: {\n          type: 'value'\n        },\n        series: [{\n          name: 'USDJPY',\n          type: 'line',\n          data: this.state.close_prices[0]\n        }, {\n          name: 'EURJPY',\n          type: 'line',\n          data: this.state.close_prices[1]\n        }]\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default Chart1;","map":{"version":3,"sources":["/Users/Phuongloan/Downloads/react-echarts-master/client/src/chart1.js"],"names":["React","Component","ReactEcharts","func","from_symbol","to_symbol","apikey","URL","Chart1","constructor","state","dates","close_prices","componentDidMount","fetch","then","results","json","data","console","log","item","setState","render","tooltip","trigger","xAxis","type","yAxis","series","name"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,YAAP,MAAyB,mBAAzB;AAEA,IAAIC,IAAI,GAAG,UAAX;AACA,IAAIC,WAAW,GAAG,KAAlB;AACA,IAAIC,SAAS,GAAG,KAAhB;AACA,IAAIC,MAAM,GAAG,kBAAb,C,CAEA;;AACA,IAAIC,GAAG,GAAG,+BAAV,C,CAEA;AACA;AACA;;AAEA,MAAMC,MAAN,SAAqBP,SAArB,CAA+B;AAC7BQ,EAAAA,WAAW,GAAG;AACZ;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,KAAK,EAAE,EADI;AAEXC,MAAAA,YAAY,EAAE;AAFH,KAAb;AAID;;AAEDC,EAAAA,iBAAiB,GAAG;AAClBC,IAAAA,KAAK,CAACP,GAAD,CAAL,CACCQ,IADD,CACMC,OAAO,IAAI;AACf,aAAOA,OAAO,CAACC,IAAR,EAAP;AACD,KAHD,EAGGF,IAHH,CAGQG,IAAI,IAAI;AACdC,MAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBF,IAAtB;;AACA,WAAK,IAAIG,IAAT,IAAiBH,IAAjB,EAAuB;AACrBC,QAAAA,OAAO,CAACC,GAAR,CAAYC,IAAZ;AACD;;AACD,WAAKC,QAAL,CAAc;AACZX,QAAAA,KAAK,EAAEO,IAAI,CAAC,QAAD,CAAJ,CAAe,OAAf,CADK;AAEZN,QAAAA,YAAY,EAAE,CAACM,IAAI,CAAC,QAAD,CAAJ,CAAe,cAAf,CAAD,EAAiCA,IAAI,CAAC,QAAD,CAAJ,CAAe,cAAf,CAAjC;AAFF,OAAd;AAID,KAZD;AAaD;;AAEDK,EAAAA,MAAM,GAAG;AACP,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,YAAD;AACE,MAAA,MAAM,EAAE;AACNC,QAAAA,OAAO,EAAE;AACPC,UAAAA,OAAO,EAAE;AADF,SADH;AAINC,QAAAA,KAAK,EAAE;AACLC,UAAAA,IAAI,EAAE,UADD;AAELT,UAAAA,IAAI,EAAE,KAAKR,KAAL,CAAWC;AAFZ,SAJD;AAQNiB,QAAAA,KAAK,EAAE;AACLD,UAAAA,IAAI,EAAE;AADD,SARD;AAWNE,QAAAA,MAAM,EAAE,CACN;AACEC,UAAAA,IAAI,EAAE,QADR;AAEEH,UAAAA,IAAI,EAAE,MAFR;AAGET,UAAAA,IAAI,EAAE,KAAKR,KAAL,CAAWE,YAAX,CAAwB,CAAxB;AAHR,SADM,EAMN;AACEkB,UAAAA,IAAI,EAAE,QADR;AAEEH,UAAAA,IAAI,EAAE,MAFR;AAGET,UAAAA,IAAI,EAAE,KAAKR,KAAL,CAAWE,YAAX,CAAwB,CAAxB;AAHR,SANM;AAXF,OADV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF;AA8BD;;AAxD4B;;AA2D/B,eAAeJ,MAAf","sourcesContent":["import React, { Component } from 'react';\nimport ReactEcharts from 'echarts-for-react';\n\nvar func = 'FX_DAILY';\nvar from_symbol = 'USD';\nvar to_symbol = 'JPY';\nvar apikey = '4ZHSS420ZVOBWM4I';\n\n// var URL = `https://www.alphavantage.co/query?function=${func}&from_symbol=${from_symbol}&to_symbol=${to_symbol}&interval=1min&apikey=${apikey}`;\nvar URL = 'http://localhost:12321/chart1'\n\n// var ticker_array = [];\n// var date_array = [];\n// var close_values = [];\n\nclass Chart1 extends Component {\n  constructor() {\n    super();\n    this.state = {\n      dates: [],\n      close_prices: []\n    };\n  }\n\n  componentDidMount() {\n    fetch(URL)\n    .then(results => {\n      return results.json();\n    }).then(data => {\n      console.log('Data: ', data)\n      for (let item in data) {\n        console.log(item);\n      }\n      this.setState({\n        dates: data['USDJPY']['dates'],\n        close_prices: [data['USDJPY']['close_prices'], data['EURJPY']['close_prices']]\n      });\n    })\n  }\n\n  render() {\n    return (\n      <div>\n        <ReactEcharts\n          option={{\n            tooltip: {\n              trigger: 'item'\n            },\n            xAxis: {\n              type: 'category',\n              data: this.state.dates\n            },\n            yAxis: {\n              type: 'value'\n            },\n            series: [\n              {\n                name: 'USDJPY',\n                type: 'line',\n                data: this.state.close_prices[0]\n              },\n              {\n                name: 'EURJPY',\n                type: 'line',\n                data: this.state.close_prices[1]\n              }\n            ]\n          }}\n        />\n      </div>\n      );\n  }\n}\n\nexport default Chart1;\n"]},"metadata":{},"sourceType":"module"}