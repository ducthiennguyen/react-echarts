{"ast":null,"code":"var _jsxFileName = \"/home/thien/Documents/react-echarts/src/App.js\";\nimport React, { Component } from 'react';\nimport ReactEcharts from 'echarts-for-react'; // alphavantage API: 4ZHSS420ZVOBWM4I\n\nvar func = 'FX_DAILY';\nvar from_symbol = 'USD';\nvar to_symbol = 'JPY';\nvar interval = '1min';\nconst apikey = '4ZHSS420ZVOBWM4I'; // var URL = `https://www.alphavantage.co/query?function=${func}&from_symbol=${from_symbol}&to_symbol=${to_symbol}&apikey=${apikey}`;\n\nvar URL = `https://www.alphavantage.co/query?function=FX_INTRADAY&from_symbol=${from_symbol}&to_symbol=${to_symbol}&interval=1min&apikey=${apikey}`;\nvar date_array = [];\nvar close_values = [];\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      date_array: [],\n      close_values: []\n    };\n  }\n\n  componentDidMount() {\n    fetch(URL).then(results => {\n      return results.json();\n    }).then(data => {\n      let values = data['Time Series FX (Daily)'];\n\n      for (var date in values) {\n        date_array.push(date);\n        close_values.push(parseFloat(values[date][\"3. low\"]));\n      }\n\n      this.setState({\n        date_array: date_array,\n        close_values: close_values\n      });\n    });\n  }\n\n  render() {\n    console.log(date_array);\n    console.log(close_values);\n    console.log(['Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat', 'Sun']);\n    return React.createElement(ReactEcharts, {\n      option: {\n        xAxis: {\n          type: 'category',\n          data: this.state.date_array\n        },\n        yAxis: {\n          type: 'value'\n        },\n        series: [{\n          type: 'line',\n          data: this.state.close_values\n        }]\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    });\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/thien/Documents/react-echarts/src/App.js"],"names":["React","Component","ReactEcharts","func","from_symbol","to_symbol","interval","apikey","URL","date_array","close_values","App","constructor","state","componentDidMount","fetch","then","results","json","data","values","date","push","parseFloat","setState","render","console","log","xAxis","type","yAxis","series"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,YAAP,MAAyB,mBAAzB,C,CAEA;;AAEA,IAAIC,IAAI,GAAG,UAAX;AACA,IAAIC,WAAW,GAAG,KAAlB;AACA,IAAIC,SAAS,GAAG,KAAhB;AACA,IAAIC,QAAQ,GAAG,MAAf;AACA,MAAMC,MAAM,GAAG,kBAAf,C,CACA;;AACA,IAAIC,GAAG,GAAI,sEAAqEJ,WAAY,cAAaC,SAAU,yBAAwBE,MAAO,EAAlJ;AACA,IAAIE,UAAU,GAAG,EAAjB;AACA,IAAIC,YAAY,GAAG,EAAnB;;AAEA,MAAMC,GAAN,SAAkBV,SAAlB,CAA4B;AAC1BW,EAAAA,WAAW,GAAG;AACZ;AACA,SAAKC,KAAL,GAAa;AACXJ,MAAAA,UAAU,EAAE,EADD;AAEXC,MAAAA,YAAY,EAAE;AAFH,KAAb;AAID;;AAEDI,EAAAA,iBAAiB,GAAG;AAClBC,IAAAA,KAAK,CAACP,GAAD,CAAL,CACCQ,IADD,CACMC,OAAO,IAAI;AACf,aAAOA,OAAO,CAACC,IAAR,EAAP;AACD,KAHD,EAGGF,IAHH,CAGQG,IAAI,IAAI;AACd,UAAIC,MAAM,GAAGD,IAAI,CAAC,wBAAD,CAAjB;;AACA,WAAK,IAAIE,IAAT,IAAiBD,MAAjB,EAAyB;AACvBX,QAAAA,UAAU,CAACa,IAAX,CAAgBD,IAAhB;AACAX,QAAAA,YAAY,CAACY,IAAb,CAAkBC,UAAU,CAACH,MAAM,CAACC,IAAD,CAAN,CAAa,QAAb,CAAD,CAA5B;AACD;;AACD,WAAKG,QAAL,CAAc;AACZf,QAAAA,UAAU,EAAEA,UADA;AAEZC,QAAAA,YAAY,EAAEA;AAFF,OAAd;AAID,KAbD;AAcD;;AAEDe,EAAAA,MAAM,GAAG;AACPC,IAAAA,OAAO,CAACC,GAAR,CAAYlB,UAAZ;AACAiB,IAAAA,OAAO,CAACC,GAAR,CAAYjB,YAAZ;AACAgB,IAAAA,OAAO,CAACC,GAAR,CAAY,CAAC,KAAD,EAAQ,KAAR,EAAe,KAAf,EAAsB,KAAtB,EAA6B,KAA7B,EAAoC,KAApC,EAA2C,KAA3C,CAAZ;AACA,WACE,oBAAC,YAAD;AACE,MAAA,MAAM,EAAE;AACNC,QAAAA,KAAK,EAAE;AACLC,UAAAA,IAAI,EAAE,UADD;AAELV,UAAAA,IAAI,EAAE,KAAKN,KAAL,CAAWJ;AAFZ,SADD;AAKNqB,QAAAA,KAAK,EAAE;AACLD,UAAAA,IAAI,EAAE;AADD,SALD;AAQNE,QAAAA,MAAM,EAAE,CAAC;AACPF,UAAAA,IAAI,EAAE,MADC;AAEPV,UAAAA,IAAI,EAAE,KAAKN,KAAL,CAAWH;AAFV,SAAD;AARF,OADV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF;AAiBD;;AA/CyB;;AAkD5B,eAAeC,GAAf","sourcesContent":["import React, { Component } from 'react';\nimport ReactEcharts from 'echarts-for-react';\n\n// alphavantage API: 4ZHSS420ZVOBWM4I\n\nvar func = 'FX_DAILY';\nvar from_symbol = 'USD';\nvar to_symbol = 'JPY';\nvar interval = '1min';\nconst apikey = '4ZHSS420ZVOBWM4I';\n// var URL = `https://www.alphavantage.co/query?function=${func}&from_symbol=${from_symbol}&to_symbol=${to_symbol}&apikey=${apikey}`;\nvar URL = `https://www.alphavantage.co/query?function=FX_INTRADAY&from_symbol=${from_symbol}&to_symbol=${to_symbol}&interval=1min&apikey=${apikey}`;\nvar date_array = [];\nvar close_values = [];\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      date_array: [],\n      close_values: []\n    };\n  }\n\n  componentDidMount() {\n    fetch(URL)\n    .then(results => {\n      return results.json();\n    }).then(data => {\n      let values = data['Time Series FX (Daily)'];\n      for (var date in values) {\n        date_array.push(date);\n        close_values.push(parseFloat(values[date][\"3. low\"]));\n      }\n      this.setState({\n        date_array: date_array,\n        close_values: close_values\n      });\n    })\n  }\n\n  render() {\n    console.log(date_array);\n    console.log(close_values);\n    console.log(['Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat', 'Sun'])\n    return (\n      <ReactEcharts\n        option={{\n          xAxis: {\n            type: 'category',\n            data: this.state.date_array\n          },\n          yAxis: {\n            type: 'value'\n          },\n          series: [{\n            type: 'line',\n            data: this.state.close_values\n          }]\n        }}\n      />\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}