{"ast":null,"code":"var _jsxFileName = \"/Users/Phuongloan/Downloads/react-echarts-master/client/src/chart1.js\";\nimport React, { Component } from 'react';\nimport ReactEcharts from 'echarts-for-react';\nvar func = 'FX_DAILY';\nvar from_symbol = 'USD';\nvar to_symbol = 'JPY';\nvar apikey = '4ZHSS420ZVOBWM4I'; // var URL = `https://www.alphavantage.co/query?function=${func}&from_symbol=${from_symbol}&to_symbol=${to_symbol}&interval=1min&apikey=${apikey}`;\n\nvar URL = 'http://localhost:12321/chart1';\nvar dates = [];\nvar oneDay = 1000 * 60 * 60 * 24;\nvar today = new Date();\n\nwhile (true) {\n  if (dates.length === 30) {\n    console.log(dates);\n    break;\n  }\n\n  today = today - oneDay;\n  dates.push(new Date(today).toISOString().slice(0, 10));\n}\n\nclass Chart1 extends Component {\n  constructor() {\n    super();\n    this.state = {\n      dates: [],\n      close_prices: []\n    };\n  }\n\n  componentDidMount() {\n    fetch(URL).then(results => {\n      return results.json();\n    }).then(data => {\n      for (let item in data) {\n        console.log(item, data[item]);\n      }\n\n      this.setState({\n        dates: [data['USDJPY']['dates'], data['EURJPY']['dates']],\n        close_prices: [data['USDJPY']['close_prices'], data['EURJPY']['close_prices']]\n      });\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, React.createElement(ReactEcharts, {\n      option: {\n        tooltip: {\n          trigger: 'item'\n        },\n        xAxis: {\n          type: 'category',\n          data: dates\n        },\n        yAxis: {\n          type: 'value'\n        },\n        series: [{\n          name: 'USDJPY',\n          type: 'line',\n          data: {\n            name: this.state.dates[0],\n            values: this.state.close_prices[0]\n          }\n        }, {\n          name: 'EURJPY',\n          type: 'line',\n          data: {\n            name: this.state.dates[1],\n            value: this.state.close_prices[1]\n          }\n        }]\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default Chart1;","map":{"version":3,"sources":["/Users/Phuongloan/Downloads/react-echarts-master/client/src/chart1.js"],"names":["React","Component","ReactEcharts","func","from_symbol","to_symbol","apikey","URL","dates","oneDay","today","Date","length","console","log","push","toISOString","slice","Chart1","constructor","state","close_prices","componentDidMount","fetch","then","results","json","data","item","setState","render","tooltip","trigger","xAxis","type","yAxis","series","name","values","value"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport ReactEcharts from 'echarts-for-react';\n\nvar func = 'FX_DAILY';\nvar from_symbol = 'USD';\nvar to_symbol = 'JPY';\nvar apikey = '4ZHSS420ZVOBWM4I';\n\n// var URL = `https://www.alphavantage.co/query?function=${func}&from_symbol=${from_symbol}&to_symbol=${to_symbol}&interval=1min&apikey=${apikey}`;\nvar URL = 'http://localhost:12321/chart1'\n\nvar dates =[];\nvar oneDay = 1000 * 60 * 60 * 24;\nvar today = new Date();\nwhile (true) {\n  if (dates.length === 30) {\n    console.log(dates);\n    break;\n  }\n  today = today - oneDay;\n  dates.push(new Date(today).toISOString().slice(0, 10))\n}\n\nclass Chart1 extends Component {\n  constructor() {\n    super();\n    this.state = {\n      dates: [],\n      close_prices: []\n    };\n  }\n\n  componentDidMount() {\n    fetch(URL)\n    .then(results => {\n      return results.json();\n    }).then(data => {\n      for (let item in data) {\n        console.log(item, data[item]);\n      }\n      this.setState({\n        dates: [data['USDJPY']['dates'], data['EURJPY']['dates']],\n        close_prices: [data['USDJPY']['close_prices'], data['EURJPY']['close_prices']]\n      });\n    })\n  }\n\n  render() {\n    return (\n      <div>\n        <ReactEcharts\n          option={{\n            tooltip: {\n              trigger: 'item'\n            },\n            xAxis: {\n              type: 'category',\n              data: dates\n            },\n            yAxis: {\n              type: 'value'\n            },\n            series: [\n              {\n                name: 'USDJPY',\n                type: 'line',\n                data: {\n                  name: this.state.dates[0],\n                  values: this.state.close_prices[0]\n                }\n              },\n              {\n                name: 'EURJPY',\n                type: 'line',\n                data: {\n                  name: this.state.dates[1],\n                  value: this.state.close_prices[1]\n                }\n              }\n            ]\n          }}\n        />\n      </div>\n      );\n  }\n}\n\nexport default Chart1;\n"]},"metadata":{},"sourceType":"module"}